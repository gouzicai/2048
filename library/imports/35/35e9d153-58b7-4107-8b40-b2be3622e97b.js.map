{"version":3,"sources":["..\\..\\..\\..\\assets\\Scripts/assets\\Scripts\\game.js"],"names":["ROWS","NUMBERS","STARTMOVELENGTH","MOVE_DURATION","cc","Class","extends","Component","properties","scoreLabel","Label","score","blockPrefab","Prefab","gap","bg","Node","start","drawBgBlocks","init","addEventHandler","blockSize","winSize","width","x","y","positions","i","push","j","block","instantiate","height","addChild","position","v2","getComponent","setNumber","updateScore","blocks","length","destroy","data","addBlock","number","string","getEmptyLocations","locations","location","Math","floor","random","on","event","startPoint","getLocation","touchEnd","endPoint","vec","sub","mag","abs","moveRight","moveLeft","moveUp","moveDown","checkFail","n","gameOver","log","afterMove","hasMoved","doMove","callback","action","moveTo","finish","callFunc","runAction","sequence","move","block2","moveBlocks","counter"],"mappings":"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","file":"game.js","sourceRoot":"..\\..\\..\\..\\assets\\Scripts","sourcesContent":["const ROWS = 4;                      //行数\r\nconst NUMBERS = [2,4];               //随机生成的数字\r\nconst STARTMOVELENGTH = 50;          //触发移动的触摸距离\r\nconst MOVE_DURATION = 0.1;           //模块移动的速度\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        scoreLabel:cc.Label,\r\n        score:0,\r\n        blockPrefab:cc.Prefab,\r\n        gap:20,\r\n        bg:cc.Node\r\n    },\r\n\r\n\r\n    start () {\r\n        this.drawBgBlocks();\r\n        this.init();\r\n        this.addEventHandler();\r\n    },\r\n\r\n\r\n    drawBgBlocks(){\r\n        this.blockSize = (cc.winSize.width - this.gap * (ROWS+1)) / ROWS;\r\n        let x = -this.blockSize/2;\r\n        let y = this.blockSize;\r\n        this.positions =[];\r\n        for(let i = 0;i < ROWS; i++){\r\n            this.positions.push([0,0,0,0]);\r\n            for(let j = 0;j < ROWS ;j++){\r\n                let block = cc.instantiate(this.blockPrefab);\r\n                x += this.gap + this.blockSize;\r\n                block.width = this.blockSize;\r\n                block.height = this.blockSize;\r\n                this.bg.addChild(block);\r\n                block.position = cc.v2(x,y);\r\n                this.positions[i][j] = block.position;\r\n                block.getComponent('block').setNumber(0);\r\n            }\r\n            x = -this.blockSize/2;\r\n            y += this.gap + this.blockSize;\r\n        }\r\n    },\r\n\r\n    init(){\r\n        this.updateScore(0);\r\n        if(this.blocks){\r\n            for(let i = 0;i<this.blocks.length ; i++){\r\n                for(let j = 0;j<this.blocks[i].length;i++){\r\n                    if(this.blocks[i][j] != null){\r\n                        this.blocks[i][j].destroy();\r\n                    }\r\n                }\r\n                 \r\n            }\r\n        }\r\n\r\n        this.data = [];\r\n        this.blocks = [];\r\n        for(let i = 0;i < ROWS; i++){\r\n            this.blocks.push([null,null,null,null]);\r\n            this.data.push([0,0,0,0]);\r\n        }\r\n        this.addBlock();\r\n        this.addBlock();\r\n        this.addBlock();\r\n\r\n    },\r\n\r\n    updateScore(number){\r\n        this.score = number,\r\n        this.scoreLabel.string = '分数：' + number;\r\n    },\r\n\r\n\r\n    /**\r\n     * 找出空余的块\r\n     * @return 空闲块的位置表示\r\n     */\r\n    getEmptyLocations(){\r\n        let locations = [];\r\n        for(let i =0;i<this.blocks.length;i++){\r\n            for(let j =0;j<this.blocks[i].length;j++){\r\n                if(this.blocks[i][j] == null){\r\n                    locations.push({x:i,y:j});\r\n                }\r\n            }\r\n        }\r\n        return locations;\r\n    },\r\n    \r\n    addBlock(){\r\n        let locations = this.getEmptyLocations();\r\n        if(locations.length == 0) return false;\r\n        let location = locations[Math.floor(Math.random() * locations.length)];\r\n        let x = location.x;\r\n        let y = location.y;\r\n        let position = this.positions[x][y];\r\n        let block = cc.instantiate(this.blockPrefab);\r\n        block.width = this.blockSize;\r\n        block.height = this.blockSize;\r\n        this.bg.addChild(block);\r\n        block.position = position;\r\n        let number = NUMBERS[Math.floor(Math.random() * NUMBERS.length)];\r\n        block.getComponent('block').setNumber(number);\r\n        this.blocks[x][y] = block;\r\n        this.data[x][y] = number;\r\n        return true;\r\n    },\r\n\r\n\r\n    addEventHandler(){\r\n        this.bg.on('touchstart',(event)=>{\r\n            this.startPoint = event.getLocation();\r\n        });\r\n\r\n        this.bg.on('touchend',(event)=>{\r\n            this.touchEnd(event);\r\n        });\r\n\r\n        this.bg.on('touchcancel',(event)=>{\r\n            this.touchEnd(event);\r\n        });\r\n    },\r\n\r\n    touchEnd(event){\r\n        this.endPoint = event.getLocation();\r\n            let vec = this.endPoint.sub(this.startPoint);\r\n            if(vec.mag() > STARTMOVELENGTH){\r\n                if(Math.abs(vec.x) > Math.abs(vec.y)){\r\n                    //水平方向\r\n                    if(vec.x > 0){\r\n                        this.moveRight();    \r\n                    }else{\r\n                        this.moveLeft();\r\n                    } \r\n                }else{\r\n                    //竖直方向\r\n                    if(vec.y > 0){\r\n                        this.moveUp();\r\n                    }else{\r\n                        this.moveDown();\r\n                    }\r\n                }\r\n            }\r\n    },\r\n\r\n\r\n    checkFail(){\r\n        for(let i = 0;i<ROWS;i++){\r\n            for(let j = 0;j<ROWS;j++){\r\n                let n = this.data[i][j];\r\n                if(n == 0) return false;\r\n                if(j > 0 && this.data[i][j-1] == n) return false;\r\n                if(j < ROWS-1 && this.data[i][j+1] == n) return false;\r\n                if(i > 0 && this.data[i-1][j] == n) return false;\r\n                if(i < ROWS-1 && this.data[i+1][j] == n) return false;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n\r\n    gameOver(){\r\n        cc.log('gameover');\r\n        },\r\n    afterMove(hasMoved){\r\n        if(hasMoved){\r\n            this.addBlock();\r\n        }\r\n        if(this.checkFail()){\r\n            this.gameOver();\r\n        }\r\n    },\r\n/**\r\n * 移动格子\r\n * @param {cc.Node} block \r\n * @param {cc.v2} position \r\n * @param {function} callback \r\n */\r\n    doMove(block,position,callback){\r\n        let action = cc.moveTo(0.1,position);\r\n        let finish = cc.callFunc(()=>{\r\n           callback && callback(); \r\n        });\r\n        block.runAction(cc.sequence(action,finish));\r\n    },\r\n    moveLeft(){\r\n        // var data = this.data;\r\n        // var blocks = this.blocks;\r\n        // for(let i = 0;i < this.data.length;i++){\r\n        //     for(let j = 0;j < this.data[i].length;j++){\r\n        //         for(let k = j;k > 0;k--){\r\n        //             if(data[i][k] == 0) continue;\r\n        //             if(data[i][k-1] == 0){\r\n        //                 data[i][k-1] = data[i][k];\r\n        //                 data[i][k] = 0;\r\n        //                 blocks[i][k-1] = blocks[i][k];\r\n        //                 blocks[i][k-1].position = this.positions[i][k-1];\r\n        //                 blocks[i][k] = null;\r\n        //             }else if(data[i][k-1] == data[i][k]){\r\n        //                 data[i][k-1] *= 2;\r\n        //                 data[i][k] = 0;\r\n        //                 blocks[i][k-1] = blocks[i][k];\r\n        //                 blocks[i][k-1].position = this.positions[i][k-1];\r\n        //                 let num = data[i][k-1];\r\n        //                 blocks[i][k-1].getComponent('block').setNumber(num);\r\n        //                 blocks[i][k] = null;\r\n        //             }\r\n        //         }\r\n        //     }\r\n        // }\r\n\r\n        let hasMoved = false;\r\n        let move = (x,y,callback)=>{\r\n            if(y == 0 || this.data[x][y] == 0){\r\n                callback && callback();\r\n                return;\r\n            }else if(this.data[x][y-1] == 0){\r\n                //移动\r\n                let block = this.blocks[x][y];\r\n                let position = this.positions[x][y-1];\r\n                this.data[x][y-1] = this.data[x][y];\r\n                this.data[x][y] = 0;\r\n                this.blocks[x][y-1] = block;\r\n                this.blocks[x][y] = null;\r\n                this.doMove(block,position,()=>{\r\n                    move(x,y-1,callback)\r\n                })\r\n                hasMoved = true;\r\n            }else if(this.data[x][y-1] == this.data[x][y]){\r\n                //合并\r\n                let block = this.blocks[x][y];\r\n                let block2 = this.blocks[x][y-1];\r\n                let position = this.positions[x][y-1];\r\n                this.data[x][y-1] *= 2;\r\n                this.data[x][y] = 0;\r\n                this.blocks[x][y-1] = block;\r\n                this.blocks[x][y] = null;\r\n                this.doMove(block,position,()=>{\r\n                    block.getComponent('block').setNumber(this.data[x][y-1]);\r\n                    block2.destroy();\r\n                    move(x,y-1,callback);\r\n                })\r\n                hasMoved = true;\r\n                this.score++;\r\n                this.updateScore(this.score);\r\n            }else{\r\n                callback && callback();\r\n                return;\r\n            }\r\n        };\r\n\r\n        let moveBlocks = [];\r\n        for(let i = 0; i < ROWS; i++){\r\n            for(let j =0; j < ROWS; j++){\r\n                if(this.data[i][j] != 0){\r\n                    moveBlocks.push({x:i,y:j});\r\n                }\r\n            }\r\n        }\r\n\r\n        let counter = 0;\r\n        for(let i = 0;i < moveBlocks.length; i++){\r\n            move(moveBlocks[i].x,moveBlocks[i].y,()=>{\r\n                counter++;\r\n                if(counter == moveBlocks.length){\r\n                    this.afterMove(hasMoved);\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    moveRight(){\r\n        let hasMoved = false;\r\n        let move = (x,y,callback)=>{\r\n            if(y == ROWS-1 || this.data[x][y] == 0){\r\n                callback && callback();\r\n                return;\r\n            }else if(this.data[x][y+1] == 0){\r\n                //移动\r\n                let block = this.blocks[x][y];\r\n                let position = this.positions[x][y+1];\r\n                this.data[x][y+1] = this.data[x][y];\r\n                this.data[x][y] = 0;\r\n                this.blocks[x][y+1] = block;\r\n                this.blocks[x][y] = null;\r\n                this.doMove(block,position,()=>{\r\n                    move(x,y+1,callback)\r\n                });\r\n\r\n                hasMoved = true;\r\n            }else if(this.data[x][y+1] == this.data[x][y]){\r\n                //合并\r\n                let block = this.blocks[x][y];\r\n                let block2 = this.blocks[x][y+1];\r\n                let position = this.positions[x][y+1];\r\n                this.data[x][y+1] *= 2;\r\n                this.data[x][y] = 0;\r\n                this.blocks[x][y+1] = block;\r\n                this.blocks[x][y] = null;\r\n                this.doMove(block,position,()=>{\r\n                    block.getComponent('block').setNumber(this.data[x][y+1]);\r\n                    block2.destroy();\r\n                    move(x,y+1,callback);\r\n                })\r\n                hasMoved = true;\r\n                this.score++;\r\n                this.updateScore(this.score);\r\n            }else{\r\n                callback && callback();\r\n                return;\r\n            }\r\n        };\r\n\r\n        let moveBlocks = [];\r\n        for(let i = 0; i < ROWS; i++){\r\n            for(let j = ROWS-1; j > -1; j--){\r\n                if(this.data[i][j] != 0){\r\n                    moveBlocks.push({x:i,y:j});\r\n                }\r\n            }\r\n        }\r\n\r\n        let counter = 0;\r\n        for(let i = 0;i < moveBlocks.length; i++){\r\n            move(moveBlocks[i].x,moveBlocks[i].y,()=>{\r\n                counter++;\r\n                if(counter == moveBlocks.length){\r\n                    this.afterMove(hasMoved);\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    moveUp(){\r\n        let hasMoved = false;\r\n        let move = (x, y, callback) => {\r\n            if (x == ROWS-1 || this.data[x][y] == 0) {\r\n                callback && callback();\r\n                return;\r\n            } else if (this.data[x + 1][y] == 0) {\r\n                //移动\r\n                let block = this.blocks[x][y];\r\n                let position = this.positions[x + 1][y];\r\n                this.data[x + 1][y] = this.data[x][y];\r\n                this.data[x][y] = 0;\r\n                this.blocks[x + 1][y] = block;\r\n                this.blocks[x][y] = null;\r\n                this.doMove(block, position, () => {\r\n                    move(x + 1, y, callback)\r\n                });\r\n\r\n                hasMoved = true;\r\n            } else if (this.data[x + 1][y] == this.data[x][y]) {\r\n                //合并\r\n                let block = this.blocks[x][y];\r\n                let block2 = this.blocks[x + 1][y];\r\n                let position = this.positions[x + 1][y];\r\n                this.data[x + 1][y] *= 2;\r\n                this.data[x][y] = 0;\r\n                this.blocks[x + 1][y] = block;\r\n                this.blocks[x][y] = null;\r\n                this.doMove(block, position, () => {\r\n                    block.getComponent('block').setNumber(this.data[x + 1][y]);\r\n                    block2.destroy();\r\n                    move(x + 1, y, callback);\r\n                })\r\n                hasMoved = true;\r\n                this.score++;\r\n                this.updateScore(this.score);\r\n            } else {\r\n                callback && callback();\r\n                return;\r\n            }\r\n        };\r\n\r\n        let moveBlocks = [];\r\n        for (let i = 0; i < ROWS; i++) {\r\n            for (let j = ROWS - 1; j > -1; j--) {\r\n                if (this.data[j][i] != 0) {\r\n                    moveBlocks.push({ x: j, y: i });\r\n                }\r\n            }\r\n        }\r\n        cc.log(moveBlocks);\r\n\r\n        let counter = 0;\r\n        for (let i = 0; i < moveBlocks.length; i++) {\r\n            move(moveBlocks[i].x, moveBlocks[i].y, () => {\r\n                counter++;\r\n                if (counter == moveBlocks.length) {\r\n                    this.afterMove(hasMoved);\r\n                }\r\n            });\r\n        }\r\n    },\r\n\r\n    moveDown(){\r\n        let hasMoved = false;\r\n        let move = (x,y,callback)=>{\r\n            if(x == 0 || this.data[x][y] == 0){\r\n                callback && callback();\r\n                return;\r\n            }else if(this.data[x-1][y] == 0){\r\n                //移动\r\n                let block = this.blocks[x][y];\r\n                let position = this.positions[x-1][y];\r\n                this.data[x-1][y] = this.data[x][y];\r\n                this.data[x][y] = 0;\r\n                this.blocks[x-1][y] = block;\r\n                this.blocks[x][y] = null;\r\n                this.doMove(block,position,()=>{\r\n                    move(x-1,y,callback)\r\n                });\r\n                \r\n                hasMoved = true;\r\n            }else if(this.data[x-1][y] == this.data[x][y]){\r\n                //合并\r\n                let block = this.blocks[x][y];\r\n                let block2 = this.blocks[x-1][y];\r\n                let position = this.positions[x-1][y];\r\n                this.data[x-1][y] *= 2;\r\n                this.data[x][y] = 0;\r\n                this.blocks[x-1][y] = block;\r\n                this.blocks[x][y] = null;\r\n                this.doMove(block,position,()=>{\r\n                    block.getComponent('block').setNumber(this.data[x-1][y]);\r\n                    block2.destroy();\r\n                    move(x-1,y,callback);\r\n                })\r\n                hasMoved = true;\r\n                this.score++;\r\n                this.updateScore(this.score);\r\n            }else{\r\n                callback && callback();\r\n                return;\r\n            }\r\n        };\r\n\r\n        let moveBlocks = [];\r\n        for(let i = 0; i < ROWS; i++){\r\n            for(let j = 0; j < ROWS; j++){\r\n                if(this.data[j][i] != 0){\r\n                    moveBlocks.push({x:j,y:i});\r\n                }\r\n            }\r\n        }\r\n\r\n        let counter = 0;\r\n        for(let i = 0;i < moveBlocks.length; i++){\r\n            move(moveBlocks[i].x,moveBlocks[i].y,()=>{\r\n                counter++;\r\n                if(counter == moveBlocks.length){\r\n                    this.afterMove(hasMoved);\r\n                }\r\n            });\r\n        }\r\n    }\r\n});\r\n"]}